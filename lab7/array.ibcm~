C00B 000        jmp     start   skip around the variables
0000 001 i      dw      0       int i 
0007 002 arr    dw      7       int arr[] 
0003 003 size   dw      3       int size  
0001 004 one    dw      1       CONSTANT ONE 
3000 005 sdit   dw      3000    hardcode subtract command 
0000 006 max    dw      0       int max 
0002 007 first  dw      2       int first = arr[0] = 2 
0003 008 second dw      3       int second = arr[1] = 3 
0001 009 third  dw      1       int third = arr[2] = 1
0000 00A curr   dw      0       int curr
3003 00B start  load    size    load size 
6001 00C        sub     i       subtract i each time in the loop 
E01E 00D        jmpl    xit     if (size - i <= 0) 
D01E 00E        jmpe    xit 
3005 00F        load    sdit    form the instruction to subtract arr[i] 
5002 010        add     arr 
5001 011        add     i 
4013 012        store   doit    plant instruction into code 
0000 013 doit   dw      0       load arr[i] 
400A 014        store   curr    curr = arr[i] 
6006 015        sub     max     arr[i] - max 
E01A 016        jmpl    loop    if (arr[i] - max <= 0) 
D01A 017        jmpe    loop    
300A 018        load    curr    load curr
4006 019        store   max     store it in max 
3001 01A loop   load    i       load i 
5004 01B        add     one     add one to i (i++) 
4001 01C        store   i       store i 
C00B 01D        jmp     start   unconditional jump to start 
3006 01E xit    load    max     load max to print 
1800 01F        printH          print max 
0000 020                halt    halt       